/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-06 03:03:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\r\n");
      out.write("\tintegrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\r\n");
      out.write("\tcrossorigin=\"anonymous\">\r\n");
      out.write("<style>\r\n");
      out.write("#nav-1 {\r\n");
      out.write("\tbackground-color: rgb(255, 128, 65);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media ( min-width : 769px) {\r\n");
      out.write("\t.dropdown-menu .dropdown-toggle:after {\r\n");
      out.write("\t\tborder-top: .3em solid transparent;\r\n");
      out.write("\t\tborder-right: 0;\r\n");
      out.write("\t\tborder-bottom: .3em solid transparent;\r\n");
      out.write("\t\tborder-left: .3em solid;\r\n");
      out.write("\t}\r\n");
      out.write("\t.dropdown-menu .dropdown-menu {\r\n");
      out.write("\t\tmargin-left: 0;\r\n");
      out.write("\t\tmargin-right: 0;\r\n");
      out.write("\t}\r\n");
      out.write("\t.dropdown-menu li {\r\n");
      out.write("\t\tposition: relative;\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav-item .submenu {\r\n");
      out.write("\t\tdisplay: none;\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tleft: 100%;\r\n");
      out.write("\t\ttop: -7px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav-item .submenu-left {\r\n");
      out.write("\t\tright: 100%;\r\n");
      out.write("\t\tleft: auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t.dropdown-menu>li:hover {\r\n");
      out.write("\t\tbackground-color: #f1f1f1\r\n");
      out.write("\t}\r\n");
      out.write("\t.dropdown-menu>li:hover>.submenu {\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* .dropdown-toggle:visited>.dropdown-menu>li>.submenu {\r\n");
      out.write("      display: block;\r\n");
      out.write("    } */\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-md navbar-dark\" id=\"nav-1\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("\"><img src=\"images/title1.png\"\r\n");
      out.write("\t\t\talt=\"이미지 없음\" width=\"50px\"></a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\tdata-target=\"#navbarsExample03\" aria-controls=\"navbarsExample03\"\r\n");
      out.write("\t\t\taria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarsExample03\">\r\n");
      out.write("      <ul class=\"navbar-nav mr-auto\">\r\n");
      out.write("        <li class=\"nav-item active\"> <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("\"> 메인 </a> </li>\r\n");
      out.write("        <li class=\"nav-item\"> <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"> 로그인 </a></li>\r\n");
      out.write("        <li class=\"nav-item dropdown\">\r\n");
      out.write("          <a class=\"nav-link dropdown-toggle\" href=\"#\"\r\n");
      out.write("\t\t\t\t\tdata-toggle=\"dropdown\"> 마이페이지 </a>\r\n");
      out.write("          <ul class=\"dropdown-menu\">\r\n");
      out.write("            <!-- <li><a class=\"dropdown-item\" href=\"#\" >회원정보수정&raquo</a> -->\r\n");
      out.write("              <li><a class=\"dropdown-item\" href=\"#\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-toggle=\"collapse\" data-target=\"#navbarsExample04\"\r\n");
      out.write("\t\t\t\t\t\t\taria-controls=\"navbarsExample04\">회원정보수정</a>\r\n");
      out.write("              <ul class=\"submenu dropdown-menu\" id=\"navbarsExample04\">\r\n");
      out.write("                <li><a class=\"dropdown-item\" href=\"#\"> 내정보수정</a></li>\r\n");
      out.write("                <li><a class=\"dropdown-item\" href=\"#\"> 작성 게시글 확인</a></li>\r\n");
      out.write("                <li><a class=\"dropdown-item\" href=\"#\"> 구매내역</a></li>\r\n");
      out.write("                <li><a class=\"dropdown-item\" href=\"#\"> 회원탈퇴</a></li>\r\n");
      out.write("              </ul>\r\n");
      out.write("            </li>\r\n");
      out.write("            <!-- <li><a class=\"dropdown-item\" href=\"#\">점주정보수정&raquo </a> -->\r\n");
      out.write("              <li><a class=\"dropdown-item\" href=\"#\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-toggle=\"collapse\" data-target=\"#navbarsExample05\"\r\n");
      out.write("\t\t\t\t\t\t\taria-controls=\"navbarsExample05\">점주정보수정</a>\r\n");
      out.write("              <ul class=\"submenu dropdown-menu\" id=\"navbarsExample05\">\r\n");
      out.write("                <li><a class=\"dropdown-item\" href=\"#\"> 가게정보수정</a></li>\r\n");
      out.write("              </ul>\r\n");
      out.write("            </li>\r\n");
      out.write("            <!-- <li><a class=\"dropdown-item\" href=\"#\"> 관리자정보수정&raquo </a> -->\r\n");
      out.write("              <li><a class=\"dropdown-item\" href=\"#\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-toggle=\"collapse\" data-target=\"#navbarsExample06\"\r\n");
      out.write("\t\t\t\t\t\t\taria-controls=\"navbarsExample06\">관리자정보수정</a>\r\n");
      out.write("              <ul class=\"submenu dropdown-menu\" id=\"navbarsExample06\">\r\n");
      out.write("                <li><a class=\"dropdown-item\" href=\"#\"> 관리자 승인/대기</a></li>\r\n");
      out.write("                <li><a class=\"dropdown-item\" href=\"#\"> 회원관리 페이지</a></li>\r\n");
      out.write("              </ul>\r\n");
      out.write("            </li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\"> <a class=\"nav-link\" href=\"#\"> 회원가입 </a> </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("      <form class=\"form-inline my-2 my-md-0\" action=\"#\" method=\"post\">\r\n");
      out.write("        <input class=\"form-control\" type=\"text\" id=\"address\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"위치검색\" readonly>\r\n");
      out.write("        <input type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("\t\t\t\t\tonclick=\"sample5_execDaumPostcode()\" value=\"위치검색\"> &nbsp;\r\n");
      out.write("        <button class=\"btn btn-primary\">검색</button>\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("  </nav>\r\n");
      out.write("\r\n");
      out.write("  <script\r\n");
      out.write("\t\tsrc=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("\t\t\t$(document).on('click', '.dropdown-item', function(e) {\r\n");
      out.write("\t\t\t\te.stopPropagation();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tfunction sample5_execDaumPostcode() {\r\n");
      out.write("\t\t\t\tnew daum.Postcode({\r\n");
      out.write("\t\t\t\t\toncomplete : function(data) {\r\n");
      out.write("\t\t\t\t\t\tvar addr = data.address; // 최종 주소 변수\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t// 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("\t\t\t\t\t\tdocument.getElementById(\"address\").value = addr;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}).open();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("  <script\r\n");
      out.write("\t\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("  <script\r\n");
      out.write("\t\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
